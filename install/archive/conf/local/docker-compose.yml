##############################################################################################################
# Derived from https://github.com/wurstmeister/storm-docker and https://github.com/wurstmeister/kafka-docker
# Apache 2.0 License
# Purpose: To deploy a Storm-Kafka-Zookeeper in docker
# 
# Steps:
# 1. Download and install Docker 1.12 or higher
# 2. cd to the directory of this file
# 3. docker-compose up -d
##############################################################################################################

  zookeeper:
      image: wurstmeister/zookeeper
      ports: 
        - "2181:2181"
  nimbus:
      image: wurstmeister/storm-nimbus
      ports:
        - "49773:3773"
        - "49772:3772"
        - "49627:6627"
      links: 
        - zookeeper:zk
  supervisor:
      image: wurstmeister/storm-supervisor
      ports:
        - "8000"
      links: 
        - nimbus:nimbus
        - zookeeper:zk
  sui:
      image: wurstmeister/storm-ui
      ports:
        - "8084:8080"
      links: 
        - nimbus:nimbus
        - zookeeper:zk
  kafka:
        image: wurstmeister/kafka:0.8.2.2
        ports:
          - "9092"
        links:
          - zookeeper
        environment:
          KAFKA_ADVERTISED_PORT: 9092
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          HOSTNAME_COMMAND: hostname -i
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
  mysqls:
        image: mysql:5.7.12
        ports:
          - "53306:3306"
        environment:
          MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
  api:
        image: "hendrix-api:${HVERSION}"
        ports:
          - "9000:9000"
        environment:
          KAFKA_HOST: kafka
          KAFKA_PORT: 9092
          KAFKA_ADDRESS: kafka:9092
          MYSQL_HOST: mysqls
          MYSQL_PORT: 3306
          MYSQL_ADDRESS: mysqls:3306
          MYSQL_ROOT_USERNAME: root
          MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
        links:
          - kafka
          - mysqls
  ui:
        image: "hendrix-ui:${HVERSION}"
        ports:
          - "8080:8080"
        links:
          - api
        environment:
          API_SERVER: api:9000
#        depends_on:
#          - api